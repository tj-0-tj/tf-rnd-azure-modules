name: Upgrade cluster node images

on:
  # schedule:
  #   - cron: '0 3 */15 * *'
  workflow_dispatch:
    inputs:
      RESOURCE_GROUP:
        description: "RESOURCE GROUP"     
        required: true
        default: "myrg"
      CLUSTER_NAME:
        description: "CLUSTER NAME"     
        required: true
        default: "usable-moray-aks"
jobs:
  upgrade-node:
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
          
      - name: Get upgrade versions images
        uses: azure/CLI@v1
        with:
          azcliversion: 2.49.0
          inlineScript: |
            CURRENT_KUBERNETES_VERSION=`az aks get-upgrades --resource-group myrg --name usable-moray-aks --query '{ current: controlPlaneProfile.kubernetesVersion,upgrades: controlPlaneProfile.upgrades[].kubernetesVersion }.current' -o tsv`
            TARGET_KUBERNETES_VERSION=`az aks get-upgrades --resource-group ${{ inputs.RESOURCE_GROUP }} --name ${{ inputs.CLUSTER_NAME }} --query '{ current: controlPlaneProfile.kubernetesVersion,upgrades: controlPlaneProfile.upgrades[].kubernetesVersion }.upgrades[-1]' -o tsv`
            
            echo "CURRENT_KUBERNETES_VERSION=$CURRENT_KUBERNETES_VERSION" >> $GITHUB_ENV
            echo "TARGET_KUBERNETES_VERSION=$TARGET_KUBERNETES_VERSION" >> $GITHUB_ENV

            echo "Target version is: $CURRENT_KUBERNETES_VERSION"
            echo "Target version is: $TARGET_KUBERNETES_VERSION"

      - name: Upgrade Control Plane
        if: env.CURRENT_KUBERNETES_VERSION != env.TARGET_KUBERNETES_VERSION && env.TARGET_KUBERNETES_VERSION != null
        uses: azure/CLI@v1
        with:
          azcliversion: 2.49.0
          inlineScript: | 
            echo "Target version is: $CURRENT_KUBERNETES_VERSION"
            echo "Target version is: $TARGET_KUBERNETES_VERSION"
            az aks upgrade --resource-group ${{ inputs.RESOURCE_GROUP }} --name ${{ inputs.CLUSTER_NAME }} --kubernetes-version ${{ env.TARGET_KUBERNETES_VERSION }} --control-plane-only --yes

      - name: Upgrade Node Pools
        uses: azure/CLI@v1
        with:
          azcliversion: 2.49.0
          inlineScript: | 
            echo "Target version is: $CURRENT_KUBERNETES_VERSION"
            echo "Target version is: $TARGET_KUBERNETES_VERSION"

      - name: Cleanup
        uses: azure/CLI@v1
        with:
          azcliversion: 2.49.0
          inlineScript: | 
            az logout
            az cache purge
            az account clear


      
      # - name: 'Create PR'
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const { repo, owner } = context.repo;
      #       const pulls = await github.rest.pulls.list({
      #         owner: owner,
      #         repo: repo,
      #         head: context.ref,
      #         base: 'main',
      #         state: 'open',
      #       });
            
      #       if (pulls.data.length < 1) {
      #         await github.rest.pulls.create({
      #           title: '[CI] Merge beta into main',
      #           owner: owner,
      #           repo: repo,
      #           head: context.ref,
      #           base: 'main',
      #           body: [
      #             'This PR is auto-generated by',
      #             '[actions/github-script](https://github.com/actions/github-script)',
      #           ].join('\n'),
      #         });
      #       } else {
      #         const existingPR = pulls.data[0];
      #         await github.rest.pulls.update({
      #           owner: owner,
      #           repo: repo,
      #           pull_number: existingPR.number,
      #           body: [
      #             existingPR.body,
      #             `Updated by Job ${context.job}`,
      #           ].join('\n'),
      #         });
      #       }